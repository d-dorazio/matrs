import { ISketch } from "./sketch";

export class SuperPermutations implements ISketch {
    public readonly name = "Super Permutation of 5";

    public readonly width = 600;
    public readonly height = 600;
    public readonly loop = true;

    private i = 0;
    private seen = new Set<number>();

    public reset(p: p5) {
        p.background(40, 40, 40);

        this.i = 0;
        this.seen = new Set();

        p.frameRate(5);
    }

    public draw(p: p5) {
        while (true) {
            if (this.i >= SuperPermutation5.length) {
                return;
            }

            const n = (
                SuperPermutation5[this.i + 0] * 10000 +
                SuperPermutation5[this.i + 1] * 1000 +
                SuperPermutation5[this.i + 2] * 100 +
                SuperPermutation5[this.i + 3] * 10 +
                SuperPermutation5[this.i + 4]
            );

            if (this.seen.has(n)) {
                this.i += 1;
                continue;
            }

            this.seen.add(n);

            const g = (
                SuperPermutation5[this.i + 1] * 100 +
                SuperPermutation5[this.i + 2] * 10 +
                SuperPermutation5[this.i + 3]
            ) % 256;

            p.fill(g, g, g, 50);
            p.noStroke();

            const t = n / 54321;

            const x = this.width / 2 + p.random(-t * 200, t * 200);
            const y = this.height / 2 + p.random(-t * 200, t * 200);

            p.ellipse(x, y, this.width / 2 * t, this.height / 2 * t);

            this.i += 1;

            break;
        }
    }
}

const SuperPermutation5 = [
    1, 2, 3, 4, 5,
    6, 1, 2, 3, 4,
    5, 1, 6, 2, 3,
    4, 5, 1, 2, 6,
    3, 4, 5, 1, 2,
    3, 6, 4, 5, 1,
    3, 2, 6, 4, 5,
    1, 3, 6, 2, 4,
    5, 1, 3, 6, 4,
    2, 5, 1, 3, 6,
    4, 5, 2, 1, 3,
    6, 4, 5, 1, 2,
    3, 4, 6, 5, 1,
    2, 3, 4, 1, 5,
    6, 2, 3, 4, 1,
    5, 2, 6, 3, 4,
    1, 5, 2, 3, 6,
    4, 1, 5, 2, 3,
    4, 6, 1, 5, 2,
    3, 4, 1, 6, 5,
    2, 3, 4, 1, 2,
    5, 6, 3, 4, 1,
    2, 5, 3, 6, 4,
    1, 2, 5, 3, 4,
    6, 1, 2, 5, 3,
    4, 1, 6, 2, 5,
    3, 4, 1, 2, 6,
    5, 3, 4, 1, 2,
    3, 5, 6, 4, 1,
    2, 3, 5, 4, 6,
    1, 2, 3, 5, 4,
    1, 6, 2, 3, 5,
    4, 1, 2, 6, 3,
    5, 4, 1, 2, 3,
    6, 5, 4, 1, 3,
    2, 6, 5, 4, 3,
    1, 2, 6, 4, 5,
    3, 1, 6, 2, 4,
    3, 5, 1, 6, 2,
    4, 3, 1, 5, 6,
    2, 4, 3, 1, 6,
    5, 2, 4, 3, 1,
    6, 2, 5, 4, 3,
    1, 6, 2, 4, 5,
    3, 1, 6, 4, 2,
    5, 3, 1, 4, 6,
    2, 5, 3, 1, 4,
    2, 6, 5, 3, 1,
    4, 2, 5, 6, 3,
    1, 4, 2, 5, 3,
    6, 1, 4, 2, 5,
    3, 1, 6, 4, 5,
    2, 3, 1, 4, 6,
    5, 2, 3, 1, 4,
    5, 6, 2, 3, 1,
    4, 5, 2, 6, 3,
    1, 4, 5, 2, 3,
    6, 1, 4, 5, 2,
    3, 1, 6, 4, 5,
    3, 2, 1, 6, 4,
    5, 3, 1, 2, 6,
    4, 3, 5, 1, 2,
    6, 4, 3, 1, 5,
    2, 6, 4, 3, 1,
    2, 5, 6, 4, 3,
    2, 1, 5, 6, 4,
    2, 3, 1, 5, 4,
    6, 2, 3, 1, 5,
    4, 2, 6, 3, 1,
    5, 4, 2, 3, 6,
    1, 5, 4, 2, 3,
    1, 6, 5, 4, 2,
    3, 1, 5, 6, 4,
    2, 1, 3, 5, 6,
    4, 2, 1, 5, 3,
    6, 2, 4, 1, 5,
    3, 6, 2, 1, 4,
    5, 3, 6, 2, 1,
    5, 4, 3, 6, 2,
    1, 5, 3, 4, 6,
    2, 1, 3, 5, 4,
    6, 2, 1, 3, 4,
    5, 6, 2, 1, 3,
    4, 6, 5, 2, 1,
    3, 4, 6, 2, 5,
    1, 3, 4, 6, 2,
    1, 5, 3, 6, 4,
    2, 1, 5, 6, 3,
    4, 2, 1, 6, 5,
    3, 4, 2, 1, 6,
    3, 5, 4, 2, 1,
    6, 3, 4, 5, 2,
    1, 6, 3, 4, 2,
    5, 1, 6, 3, 4,
    2, 1, 5, 6, 4,
    3, 2, 5, 1, 6,
    4, 3, 2, 5, 6,
    1, 4, 3, 2, 5,
    6, 4, 1, 3, 2,
    5, 6, 4, 3, 1,
    2, 6, 5, 4, 3,
    2, 1, 6, 5, 4,
    3, 2, 6, 1, 5,
    3, 4, 2, 6, 1,
    3, 5, 4, 2, 6,
    1, 3, 4, 5, 2,
    6, 1, 3, 4, 2,
    5, 6, 1, 3, 4,
    2, 6, 5, 1, 3,
    4, 2, 6, 1, 5,
    3, 2, 4, 6, 5,
    1, 3, 2, 4, 6,
    5, 3, 1, 2, 4,
    6, 3, 5, 1, 2,
    4, 6, 3, 1, 5,
    2, 4, 6, 3, 1,
    2, 5, 4, 6, 3,
    2, 1, 5, 4, 6,
    3, 2, 5, 1, 4,
    6, 3, 2, 5, 4,
    1, 6, 3, 2, 5,
    4, 6, 1, 3, 2,
    5, 4, 6, 3, 1,
    2, 4, 5, 6, 3,
    2, 1, 4, 5, 6,
    3, 2, 4, 1, 5,
    6, 3, 2, 4, 5,
    1, 6, 3, 2, 4,
    5, 6, 1, 3, 2,
    4, 5, 6, 3, 1,
    2, 4, 6, 5, 3,
    2, 1, 4, 6, 5,
    3, 2, 4, 1, 6,
    5, 3, 2, 4, 6,
    1, 5, 3, 2, 6,
    4, 1, 5, 3, 2,
    6, 1, 4, 5, 3,
    2, 6, 1, 5, 4,
    3, 2, 6, 5, 1,
    4, 3, 6, 2, 5,
    1, 4, 3, 6, 5,
    2, 1, 4, 3, 5,
    6, 2, 1, 4, 3,
    5, 2, 6, 1, 4,
    3, 5, 2, 1, 6,
    4, 3, 5, 2, 1,
    4, 6, 3, 5, 2,
    1, 4, 3, 6, 5,
    1, 2, 4, 3, 6,
    1, 5, 2, 4, 3,
    6, 1, 2, 5, 4,
    3, 6, 1, 2, 4,
    5, 3, 6, 1, 2,
    4, 3, 5, 6, 1,
    2, 4, 3, 6, 5,
    1, 4, 2, 3, 5,
    6, 1, 4, 2, 3,
    5, 1, 6, 4, 2,
    3, 5, 1, 4, 6,
    2, 3, 5, 1, 4,
    2, 6, 3, 5, 1,
    4, 2, 3, 6, 5,
    1, 4, 3, 2, 6,
    5, 4, 1, 3, 6,
    2, 5, 4, 1, 3,
    6, 5, 2, 4, 1,
    3, 5, 6, 2, 4,
    1, 3, 5, 2, 6,
    4, 1, 3, 5, 2,
    4, 6, 1, 3, 5,
    2, 4, 1, 6, 3,
    5, 2, 4, 1, 3,
    6, 5, 4, 2, 1,
    3, 6, 5, 4, 1,
    2, 3,
];
